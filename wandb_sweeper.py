import os
import argparse
import copy
import numpy as np
from datetime import datetime

import subprocess
from subprocess import Popen
import select
import time
import sys

def prettyPrintDict(d):
    s = ""
    # maxL = 0
    for k in d:
        s += "%35s | %s\n" % (k, repr(d[k]))
    return s

parser = argparse.ArgumentParser()
parser.add_argument('exec', type = str, help="The program file *.py that will be executed.")
parser.add_argument('--runs', type = int, default = 1, help="How many runs for each HP setup.")
parser.add_argument('--gpus', type = str, default = '0', help="GPUs to be used.")
parser.add_argument('-g', '--greedy', action = 'store_true', help="Use greedy search instead of grid search. Order are determined by ? order - I have no idea.")
parsed, unknown = parser.parse_known_args()

for arg in unknown:
    if arg.startswith(("-", "--")):
        parser.add_argument(arg, type=str)

args = parser.parse_args()
_gpusstr = args.gpus
args.gpus = args.gpus.split(',')

hpgrid = copy.deepcopy(args.__dict__)
hpgrid.pop("exec")
hpgrid.pop("runs")
hpgrid.pop("greedy")
hpgrid.pop("gpus")
for hp in hpgrid:
    hpgrid[hp] = hpgrid[hp].split(',')

name = "%s" % (args.exec.split('.')[0])
pthprefix = "Results_new/%s/%s/%s/%s/" % ("HPTuner", name, datetime.now().strftime("%Y-%m-%d"), datetime.now().strftime("[%H-%M-%S]"))
os.makedirs(pthprefix)

# Make YAML
with open(os.path.join(pthprefix, 'sweep.yaml'), 'w') as fp:

    keyargs = ""

    fp.write("description: Auto-sweep config file generated by wandb_sweeper.py\n\n")
    fp.write("program: %s\n\n" % args.exec)
    fp.write("method: grid\n\n") # TODO: other methods?
    fp.write("metric: \n    name: accuracy\n    goal: maximize\n\n")
    fp.write("parameters:\n")
    
    fp.write("    runid:\n")
    fp.write("        values: [")
    for i in range(args.runs):
        fp.write("\"%s\"" % i)
        if i < (args.runs - 1):
            fp.write(",")
    fp.write("]\n")

    for hp in hpgrid:
        fp.write("    %s:\n" % hp)
        fp.write("        values: [")

        # Check if key args
        if(len(hpgrid[hp]) > 1):
            keyargs += "%s," % (hp)

        for i in range(len(hpgrid[hp])):
            fp.write("\"%s\"" % hpgrid[hp][i])
            if i < (len(hpgrid[hp]) - 1):
                fp.write(",")
        fp.write("]\n")

    if len(keyargs) > 0:
        keyargs = keyargs[:-1]
    
    fp.write("    keyargs:\n")
    fp.write("        value: \"%s\"\n" % keyargs)

os.system("cat %s" % os.path.join(pthprefix, 'sweep.yaml'))
os.system("wandb sweep %s" % (os.path.join(pthprefix, 'sweep.yaml')))

os.system("python3 wandb_sweep_agents_batchedrunner.py --gpus %s" % (_gpusstr))
